{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleSearchBoxChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,MAChD,sBAAKH,UAAU,YAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BD,EAAMG,QAAQE,OACxC,4BAAIL,EAAMG,QAAQG,eCLbC,EAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,aAAf,SACGD,EAAMQ,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCLhCM,G,MAAY,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,sBACvC,OACE,uBACEX,UAAU,YACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCDG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAaFH,sBAAwB,SAACI,GACvB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,Y,oBAQ9D,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACvCA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,cACZC,sBAAuBe,KAAKf,wBAG9B,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6ac56a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={`https://robohash.org/${props.monster.id}`}></img>\r\n      <div className=\"container\">\r\n        <h2 className=\"roboname\">{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./CardList.css\";\r\nimport { Card } from \"../Card/Card\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list \">\r\n      {props.monsters.map((monster) => (\r\n        <Card monster={monster} key={monster.id}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleSearchBoxChange }) => {\r\n  return (\r\n    <input\r\n      className=\"searchBox\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleSearchBoxChange}\r\n    ></input>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/CardList/CardList\";\nimport { SearchBox } from \"./components/SearchBox/SearchBox\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\n      response.json().then((users) => this.setState({ monsters: users }))\n    );\n  }\n\n  handleSearchBoxChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"placeholder\"\n          handleSearchBoxChange={this.handleSearchBoxChange}\n        ></SearchBox>\n\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}